// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package baremetal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unmango/pulumi-baremetal/sdk/go/baremetal/internal"
)

var _ = internal.GetEnvOrDefault

type TeeOpts struct {
	Files []string `pulumi:"files"`
}

// TeeOptsInput is an input type that accepts TeeOptsArgs and TeeOptsOutput values.
// You can construct a concrete instance of `TeeOptsInput` via:
//
//	TeeOptsArgs{...}
type TeeOptsInput interface {
	pulumi.Input

	ToTeeOptsOutput() TeeOptsOutput
	ToTeeOptsOutputWithContext(context.Context) TeeOptsOutput
}

type TeeOptsArgs struct {
	Files pulumi.StringArrayInput `pulumi:"files"`
}

func (TeeOptsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TeeOpts)(nil)).Elem()
}

func (i TeeOptsArgs) ToTeeOptsOutput() TeeOptsOutput {
	return i.ToTeeOptsOutputWithContext(context.Background())
}

func (i TeeOptsArgs) ToTeeOptsOutputWithContext(ctx context.Context) TeeOptsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeeOptsOutput)
}

func (i TeeOptsArgs) ToTeeOptsPtrOutput() TeeOptsPtrOutput {
	return i.ToTeeOptsPtrOutputWithContext(context.Background())
}

func (i TeeOptsArgs) ToTeeOptsPtrOutputWithContext(ctx context.Context) TeeOptsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeeOptsOutput).ToTeeOptsPtrOutputWithContext(ctx)
}

// TeeOptsPtrInput is an input type that accepts TeeOptsArgs, TeeOptsPtr and TeeOptsPtrOutput values.
// You can construct a concrete instance of `TeeOptsPtrInput` via:
//
//	        TeeOptsArgs{...}
//
//	or:
//
//	        nil
type TeeOptsPtrInput interface {
	pulumi.Input

	ToTeeOptsPtrOutput() TeeOptsPtrOutput
	ToTeeOptsPtrOutputWithContext(context.Context) TeeOptsPtrOutput
}

type teeOptsPtrType TeeOptsArgs

func TeeOptsPtr(v *TeeOptsArgs) TeeOptsPtrInput {
	return (*teeOptsPtrType)(v)
}

func (*teeOptsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TeeOpts)(nil)).Elem()
}

func (i *teeOptsPtrType) ToTeeOptsPtrOutput() TeeOptsPtrOutput {
	return i.ToTeeOptsPtrOutputWithContext(context.Background())
}

func (i *teeOptsPtrType) ToTeeOptsPtrOutputWithContext(ctx context.Context) TeeOptsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TeeOptsPtrOutput)
}

type TeeOptsOutput struct{ *pulumi.OutputState }

func (TeeOptsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeeOpts)(nil)).Elem()
}

func (o TeeOptsOutput) ToTeeOptsOutput() TeeOptsOutput {
	return o
}

func (o TeeOptsOutput) ToTeeOptsOutputWithContext(ctx context.Context) TeeOptsOutput {
	return o
}

func (o TeeOptsOutput) ToTeeOptsPtrOutput() TeeOptsPtrOutput {
	return o.ToTeeOptsPtrOutputWithContext(context.Background())
}

func (o TeeOptsOutput) ToTeeOptsPtrOutputWithContext(ctx context.Context) TeeOptsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TeeOpts) *TeeOpts {
		return &v
	}).(TeeOptsPtrOutput)
}

func (o TeeOptsOutput) Files() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TeeOpts) []string { return v.Files }).(pulumi.StringArrayOutput)
}

type TeeOptsPtrOutput struct{ *pulumi.OutputState }

func (TeeOptsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TeeOpts)(nil)).Elem()
}

func (o TeeOptsPtrOutput) ToTeeOptsPtrOutput() TeeOptsPtrOutput {
	return o
}

func (o TeeOptsPtrOutput) ToTeeOptsPtrOutputWithContext(ctx context.Context) TeeOptsPtrOutput {
	return o
}

func (o TeeOptsPtrOutput) Elem() TeeOptsOutput {
	return o.ApplyT(func(v *TeeOpts) TeeOpts {
		if v != nil {
			return *v
		}
		var ret TeeOpts
		return ret
	}).(TeeOptsOutput)
}

func (o TeeOptsPtrOutput) Files() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TeeOpts) []string {
		if v == nil {
			return nil
		}
		return v.Files
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TeeOptsInput)(nil)).Elem(), TeeOptsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TeeOptsPtrInput)(nil)).Elem(), TeeOptsArgs{})
	pulumi.RegisterOutputType(TeeOptsOutput{})
	pulumi.RegisterOutputType(TeeOptsPtrOutput{})
}
