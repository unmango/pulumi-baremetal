// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package coreutils

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/unmango/pulumi-baremetal/sdk/go/baremetal/internal"
)

type Wget struct {
	pulumi.CustomResourceState

	Args         WgetArgsTypeOutput       `pulumi:"args"`
	CreatedFiles pulumi.StringArrayOutput `pulumi:"createdFiles"`
	CustomDelete pulumi.StringArrayOutput `pulumi:"customDelete"`
	CustomUpdate pulumi.StringArrayOutput `pulumi:"customUpdate"`
	ExitCode     pulumi.IntOutput         `pulumi:"exitCode"`
	MovedFiles   pulumi.StringMapOutput   `pulumi:"movedFiles"`
	Stderr       pulumi.StringOutput      `pulumi:"stderr"`
	Stdout       pulumi.StringOutput      `pulumi:"stdout"`
	Triggers     pulumi.ArrayOutput       `pulumi:"triggers"`
}

// NewWget registers a new resource with the given unique name, arguments, and options.
func NewWget(ctx *pulumi.Context,
	name string, args *WgetArgs, opts ...pulumi.ResourceOption) (*Wget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Args == nil {
		return nil, errors.New("invalid value for required argument 'Args'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Wget
	err := ctx.RegisterResource("baremetal:coreutils:Wget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWget gets an existing Wget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WgetState, opts ...pulumi.ResourceOption) (*Wget, error) {
	var resource Wget
	err := ctx.ReadResource("baremetal:coreutils:Wget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Wget resources.
type wgetState struct {
}

type WgetState struct {
}

func (WgetState) ElementType() reflect.Type {
	return reflect.TypeOf((*wgetState)(nil)).Elem()
}

type wgetArgs struct {
	Args         WgetArgsType  `pulumi:"args"`
	CustomDelete []string      `pulumi:"customDelete"`
	CustomUpdate []string      `pulumi:"customUpdate"`
	Triggers     []interface{} `pulumi:"triggers"`
}

// The set of arguments for constructing a Wget resource.
type WgetArgs struct {
	Args         WgetArgsTypeInput
	CustomDelete pulumi.StringArrayInput
	CustomUpdate pulumi.StringArrayInput
	Triggers     pulumi.ArrayInput
}

func (WgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*wgetArgs)(nil)).Elem()
}

type WgetInput interface {
	pulumi.Input

	ToWgetOutput() WgetOutput
	ToWgetOutputWithContext(ctx context.Context) WgetOutput
}

func (*Wget) ElementType() reflect.Type {
	return reflect.TypeOf((**Wget)(nil)).Elem()
}

func (i *Wget) ToWgetOutput() WgetOutput {
	return i.ToWgetOutputWithContext(context.Background())
}

func (i *Wget) ToWgetOutputWithContext(ctx context.Context) WgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WgetOutput)
}

func (i *Wget) ToOutput(ctx context.Context) pulumix.Output[*Wget] {
	return pulumix.Output[*Wget]{
		OutputState: i.ToWgetOutputWithContext(ctx).OutputState,
	}
}

type WgetOutput struct{ *pulumi.OutputState }

func (WgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Wget)(nil)).Elem()
}

func (o WgetOutput) ToWgetOutput() WgetOutput {
	return o
}

func (o WgetOutput) ToWgetOutputWithContext(ctx context.Context) WgetOutput {
	return o
}

func (o WgetOutput) ToOutput(ctx context.Context) pulumix.Output[*Wget] {
	return pulumix.Output[*Wget]{
		OutputState: o.OutputState,
	}
}

func (o WgetOutput) Args() WgetArgsTypeOutput {
	return o.ApplyT(func(v *Wget) WgetArgsTypeOutput { return v.Args }).(WgetArgsTypeOutput)
}

func (o WgetOutput) CreatedFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Wget) pulumi.StringArrayOutput { return v.CreatedFiles }).(pulumi.StringArrayOutput)
}

func (o WgetOutput) CustomDelete() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Wget) pulumi.StringArrayOutput { return v.CustomDelete }).(pulumi.StringArrayOutput)
}

func (o WgetOutput) CustomUpdate() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Wget) pulumi.StringArrayOutput { return v.CustomUpdate }).(pulumi.StringArrayOutput)
}

func (o WgetOutput) ExitCode() pulumi.IntOutput {
	return o.ApplyT(func(v *Wget) pulumi.IntOutput { return v.ExitCode }).(pulumi.IntOutput)
}

func (o WgetOutput) MovedFiles() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Wget) pulumi.StringMapOutput { return v.MovedFiles }).(pulumi.StringMapOutput)
}

func (o WgetOutput) Stderr() pulumi.StringOutput {
	return o.ApplyT(func(v *Wget) pulumi.StringOutput { return v.Stderr }).(pulumi.StringOutput)
}

func (o WgetOutput) Stdout() pulumi.StringOutput {
	return o.ApplyT(func(v *Wget) pulumi.StringOutput { return v.Stdout }).(pulumi.StringOutput)
}

func (o WgetOutput) Triggers() pulumi.ArrayOutput {
	return o.ApplyT(func(v *Wget) pulumi.ArrayOutput { return v.Triggers }).(pulumi.ArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WgetInput)(nil)).Elem(), &Wget{})
	pulumi.RegisterOutputType(WgetOutput{})
}
