// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cmd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/unmango/pulumi-baremetal/sdk/go/baremetal/internal"
)

type Mktemp struct {
	pulumi.CustomResourceState

	Args         MktempArgsTypeOutput     `pulumi:"args"`
	CreatedFiles pulumi.StringArrayOutput `pulumi:"createdFiles"`
	ExitCode     pulumi.IntOutput         `pulumi:"exitCode"`
	MovedFiles   pulumi.StringMapOutput   `pulumi:"movedFiles"`
	Stderr       pulumi.StringOutput      `pulumi:"stderr"`
	Stdout       pulumi.StringOutput      `pulumi:"stdout"`
}

// NewMktemp registers a new resource with the given unique name, arguments, and options.
func NewMktemp(ctx *pulumi.Context,
	name string, args *MktempArgs, opts ...pulumi.ResourceOption) (*Mktemp, error) {
	if args == nil {
		args = &MktempArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Mktemp
	err := ctx.RegisterResource("baremetal:cmd:Mktemp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMktemp gets an existing Mktemp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMktemp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MktempState, opts ...pulumi.ResourceOption) (*Mktemp, error) {
	var resource Mktemp
	err := ctx.ReadResource("baremetal:cmd:Mktemp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Mktemp resources.
type mktempState struct {
}

type MktempState struct {
}

func (MktempState) ElementType() reflect.Type {
	return reflect.TypeOf((*mktempState)(nil)).Elem()
}

type mktempArgs struct {
	Directory *bool   `pulumi:"directory"`
	DryRun    *bool   `pulumi:"dryRun"`
	Help      *bool   `pulumi:"help"`
	P         *string `pulumi:"p"`
	Quiet     *bool   `pulumi:"quiet"`
	Suffix    *string `pulumi:"suffix"`
	T         *bool   `pulumi:"t"`
	Template  *string `pulumi:"template"`
	Tmpdir    *bool   `pulumi:"tmpdir"`
	Version   *bool   `pulumi:"version"`
}

// The set of arguments for constructing a Mktemp resource.
type MktempArgs struct {
	Directory pulumi.BoolPtrInput
	DryRun    pulumi.BoolPtrInput
	Help      pulumi.BoolPtrInput
	P         pulumi.StringPtrInput
	Quiet     pulumi.BoolPtrInput
	Suffix    pulumi.StringPtrInput
	T         pulumi.BoolPtrInput
	Template  pulumi.StringPtrInput
	Tmpdir    pulumi.BoolPtrInput
	Version   pulumi.BoolPtrInput
}

func (MktempArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mktempArgs)(nil)).Elem()
}

type MktempInput interface {
	pulumi.Input

	ToMktempOutput() MktempOutput
	ToMktempOutputWithContext(ctx context.Context) MktempOutput
}

func (*Mktemp) ElementType() reflect.Type {
	return reflect.TypeOf((**Mktemp)(nil)).Elem()
}

func (i *Mktemp) ToMktempOutput() MktempOutput {
	return i.ToMktempOutputWithContext(context.Background())
}

func (i *Mktemp) ToMktempOutputWithContext(ctx context.Context) MktempOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MktempOutput)
}

func (i *Mktemp) ToOutput(ctx context.Context) pulumix.Output[*Mktemp] {
	return pulumix.Output[*Mktemp]{
		OutputState: i.ToMktempOutputWithContext(ctx).OutputState,
	}
}

type MktempOutput struct{ *pulumi.OutputState }

func (MktempOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Mktemp)(nil)).Elem()
}

func (o MktempOutput) ToMktempOutput() MktempOutput {
	return o
}

func (o MktempOutput) ToMktempOutputWithContext(ctx context.Context) MktempOutput {
	return o
}

func (o MktempOutput) ToOutput(ctx context.Context) pulumix.Output[*Mktemp] {
	return pulumix.Output[*Mktemp]{
		OutputState: o.OutputState,
	}
}

func (o MktempOutput) Args() MktempArgsTypeOutput {
	return o.ApplyT(func(v *Mktemp) MktempArgsTypeOutput { return v.Args }).(MktempArgsTypeOutput)
}

func (o MktempOutput) CreatedFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Mktemp) pulumi.StringArrayOutput { return v.CreatedFiles }).(pulumi.StringArrayOutput)
}

func (o MktempOutput) ExitCode() pulumi.IntOutput {
	return o.ApplyT(func(v *Mktemp) pulumi.IntOutput { return v.ExitCode }).(pulumi.IntOutput)
}

func (o MktempOutput) MovedFiles() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Mktemp) pulumi.StringMapOutput { return v.MovedFiles }).(pulumi.StringMapOutput)
}

func (o MktempOutput) Stderr() pulumi.StringOutput {
	return o.ApplyT(func(v *Mktemp) pulumi.StringOutput { return v.Stderr }).(pulumi.StringOutput)
}

func (o MktempOutput) Stdout() pulumi.StringOutput {
	return o.ApplyT(func(v *Mktemp) pulumi.StringOutput { return v.Stdout }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MktempInput)(nil)).Elem(), &Mktemp{})
	pulumi.RegisterOutputType(MktempOutput{})
}
