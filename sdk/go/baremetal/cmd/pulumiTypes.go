// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cmd

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/unmango/pulumi-baremetal/sdk/go/baremetal/internal"
)

var _ = internal.GetEnvOrDefault

type MvArgsType struct {
	Backup               *string  `pulumi:"backup"`
	Destination          *string  `pulumi:"destination"`
	Directory            *string  `pulumi:"directory"`
	Force                *bool    `pulumi:"force"`
	Help                 *bool    `pulumi:"help"`
	NoClobber            *bool    `pulumi:"noClobber"`
	NoTargetDirectory    *bool    `pulumi:"noTargetDirectory"`
	Source               []string `pulumi:"source"`
	StripTrailingSlashes *bool    `pulumi:"stripTrailingSlashes"`
	Suffix               *string  `pulumi:"suffix"`
	TargetDirectory      *string  `pulumi:"targetDirectory"`
	Update               *bool    `pulumi:"update"`
	Verbose              *bool    `pulumi:"verbose"`
	Version              *bool    `pulumi:"version"`
}

type MvArgsTypeOutput struct{ *pulumi.OutputState }

func (MvArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MvArgsType)(nil)).Elem()
}

func (o MvArgsTypeOutput) ToMvArgsTypeOutput() MvArgsTypeOutput {
	return o
}

func (o MvArgsTypeOutput) ToMvArgsTypeOutputWithContext(ctx context.Context) MvArgsTypeOutput {
	return o
}

func (o MvArgsTypeOutput) ToOutput(ctx context.Context) pulumix.Output[MvArgsType] {
	return pulumix.Output[MvArgsType]{
		OutputState: o.OutputState,
	}
}

func (o MvArgsTypeOutput) Backup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MvArgsType) *string { return v.Backup }).(pulumi.StringPtrOutput)
}

func (o MvArgsTypeOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MvArgsType) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o MvArgsTypeOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MvArgsType) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

func (o MvArgsTypeOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

func (o MvArgsTypeOutput) Help() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.Help }).(pulumi.BoolPtrOutput)
}

func (o MvArgsTypeOutput) NoClobber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.NoClobber }).(pulumi.BoolPtrOutput)
}

func (o MvArgsTypeOutput) NoTargetDirectory() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.NoTargetDirectory }).(pulumi.BoolPtrOutput)
}

func (o MvArgsTypeOutput) Source() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MvArgsType) []string { return v.Source }).(pulumi.StringArrayOutput)
}

func (o MvArgsTypeOutput) StripTrailingSlashes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.StripTrailingSlashes }).(pulumi.BoolPtrOutput)
}

func (o MvArgsTypeOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MvArgsType) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

func (o MvArgsTypeOutput) TargetDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MvArgsType) *string { return v.TargetDirectory }).(pulumi.StringPtrOutput)
}

func (o MvArgsTypeOutput) Update() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.Update }).(pulumi.BoolPtrOutput)
}

func (o MvArgsTypeOutput) Verbose() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.Verbose }).(pulumi.BoolPtrOutput)
}

func (o MvArgsTypeOutput) Version() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MvArgsType) *bool { return v.Version }).(pulumi.BoolPtrOutput)
}

type RmArgsType struct {
	Dir           *bool    `pulumi:"dir"`
	Files         []string `pulumi:"files"`
	Force         *bool    `pulumi:"force"`
	Help          *bool    `pulumi:"help"`
	OneFileSystem *bool    `pulumi:"oneFileSystem"`
	Recursive     *bool    `pulumi:"recursive"`
	Verbose       *bool    `pulumi:"verbose"`
}

type RmArgsTypeOutput struct{ *pulumi.OutputState }

func (RmArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RmArgsType)(nil)).Elem()
}

func (o RmArgsTypeOutput) ToRmArgsTypeOutput() RmArgsTypeOutput {
	return o
}

func (o RmArgsTypeOutput) ToRmArgsTypeOutputWithContext(ctx context.Context) RmArgsTypeOutput {
	return o
}

func (o RmArgsTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RmArgsType] {
	return pulumix.Output[RmArgsType]{
		OutputState: o.OutputState,
	}
}

func (o RmArgsTypeOutput) Dir() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RmArgsType) *bool { return v.Dir }).(pulumi.BoolPtrOutput)
}

func (o RmArgsTypeOutput) Files() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RmArgsType) []string { return v.Files }).(pulumi.StringArrayOutput)
}

func (o RmArgsTypeOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RmArgsType) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

func (o RmArgsTypeOutput) Help() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RmArgsType) *bool { return v.Help }).(pulumi.BoolPtrOutput)
}

func (o RmArgsTypeOutput) OneFileSystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RmArgsType) *bool { return v.OneFileSystem }).(pulumi.BoolPtrOutput)
}

func (o RmArgsTypeOutput) Recursive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RmArgsType) *bool { return v.Recursive }).(pulumi.BoolPtrOutput)
}

func (o RmArgsTypeOutput) Verbose() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RmArgsType) *bool { return v.Verbose }).(pulumi.BoolPtrOutput)
}

type TarArgsType struct {
	Append               *bool    `pulumi:"append"`
	Args                 []string `pulumi:"args"`
	Bzip2                *bool    `pulumi:"bzip2"`
	Create               *bool    `pulumi:"create"`
	Delete               *bool    `pulumi:"delete"`
	Diff                 *bool    `pulumi:"diff"`
	Directory            *string  `pulumi:"directory"`
	Exclude              *string  `pulumi:"exclude"`
	ExcludeFrom          *string  `pulumi:"excludeFrom"`
	ExcludeVcs           *bool    `pulumi:"excludeVcs"`
	ExcludeVcsIgnores    *bool    `pulumi:"excludeVcsIgnores"`
	Extract              *bool    `pulumi:"extract"`
	File                 *string  `pulumi:"file"`
	Gzip                 *bool    `pulumi:"gzip"`
	IgnoreCommandError   *bool    `pulumi:"ignoreCommandError"`
	KeepDirectorySymlink *bool    `pulumi:"keepDirectorySymlink"`
	KeepNewerFiles       *bool    `pulumi:"keepNewerFiles"`
	KeepOldfiles         *bool    `pulumi:"keepOldfiles"`
	List                 *bool    `pulumi:"list"`
	Lzip                 *bool    `pulumi:"lzip"`
	Lzma                 *bool    `pulumi:"lzma"`
	Lzop                 *bool    `pulumi:"lzop"`
	NoOverwriteDir       *bool    `pulumi:"noOverwriteDir"`
	NoSeek               *bool    `pulumi:"noSeek"`
	Overwrite            *bool    `pulumi:"overwrite"`
	OverwriteDir         *bool    `pulumi:"overwriteDir"`
	RemoveFiles          *bool    `pulumi:"removeFiles"`
	SkipOldFiles         *bool    `pulumi:"skipOldFiles"`
	Sparse               *bool    `pulumi:"sparse"`
	StripComponents      *int     `pulumi:"stripComponents"`
	Suffix               *string  `pulumi:"suffix"`
	ToStdout             *bool    `pulumi:"toStdout"`
	Transform            *string  `pulumi:"transform"`
	UnlinkFirst          *bool    `pulumi:"unlinkFirst"`
	Update               *bool    `pulumi:"update"`
	Verbose              *bool    `pulumi:"verbose"`
	Verify               *bool    `pulumi:"verify"`
	Xz                   *bool    `pulumi:"xz"`
	Zstd                 *bool    `pulumi:"zstd"`
}

type TarArgsTypeOutput struct{ *pulumi.OutputState }

func (TarArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TarArgsType)(nil)).Elem()
}

func (o TarArgsTypeOutput) ToTarArgsTypeOutput() TarArgsTypeOutput {
	return o
}

func (o TarArgsTypeOutput) ToTarArgsTypeOutputWithContext(ctx context.Context) TarArgsTypeOutput {
	return o
}

func (o TarArgsTypeOutput) ToOutput(ctx context.Context) pulumix.Output[TarArgsType] {
	return pulumix.Output[TarArgsType]{
		OutputState: o.OutputState,
	}
}

func (o TarArgsTypeOutput) Append() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Append }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TarArgsType) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o TarArgsTypeOutput) Bzip2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Bzip2 }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Create() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Create }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Delete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Delete }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Diff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Diff }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TarArgsType) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

func (o TarArgsTypeOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TarArgsType) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

func (o TarArgsTypeOutput) ExcludeFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TarArgsType) *string { return v.ExcludeFrom }).(pulumi.StringPtrOutput)
}

func (o TarArgsTypeOutput) ExcludeVcs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.ExcludeVcs }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) ExcludeVcsIgnores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.ExcludeVcsIgnores }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Extract() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Extract }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TarArgsType) *string { return v.File }).(pulumi.StringPtrOutput)
}

func (o TarArgsTypeOutput) Gzip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Gzip }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) IgnoreCommandError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.IgnoreCommandError }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) KeepDirectorySymlink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.KeepDirectorySymlink }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) KeepNewerFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.KeepNewerFiles }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) KeepOldfiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.KeepOldfiles }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) List() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.List }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Lzip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Lzip }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Lzma() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Lzma }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Lzop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Lzop }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) NoOverwriteDir() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.NoOverwriteDir }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) NoSeek() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.NoSeek }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Overwrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Overwrite }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) OverwriteDir() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.OverwriteDir }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) RemoveFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.RemoveFiles }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) SkipOldFiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.SkipOldFiles }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Sparse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Sparse }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) StripComponents() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TarArgsType) *int { return v.StripComponents }).(pulumi.IntPtrOutput)
}

func (o TarArgsTypeOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TarArgsType) *string { return v.Suffix }).(pulumi.StringPtrOutput)
}

func (o TarArgsTypeOutput) ToStdout() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.ToStdout }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Transform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TarArgsType) *string { return v.Transform }).(pulumi.StringPtrOutput)
}

func (o TarArgsTypeOutput) UnlinkFirst() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.UnlinkFirst }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Update() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Update }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Verbose() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Verbose }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Verify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Verify }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Xz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Xz }).(pulumi.BoolPtrOutput)
}

func (o TarArgsTypeOutput) Zstd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TarArgsType) *bool { return v.Zstd }).(pulumi.BoolPtrOutput)
}

type TeeArgsType struct {
	Append  *bool    `pulumi:"append"`
	Content string   `pulumi:"content"`
	Files   []string `pulumi:"files"`
}

type TeeArgsTypeOutput struct{ *pulumi.OutputState }

func (TeeArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TeeArgsType)(nil)).Elem()
}

func (o TeeArgsTypeOutput) ToTeeArgsTypeOutput() TeeArgsTypeOutput {
	return o
}

func (o TeeArgsTypeOutput) ToTeeArgsTypeOutputWithContext(ctx context.Context) TeeArgsTypeOutput {
	return o
}

func (o TeeArgsTypeOutput) ToOutput(ctx context.Context) pulumix.Output[TeeArgsType] {
	return pulumix.Output[TeeArgsType]{
		OutputState: o.OutputState,
	}
}

func (o TeeArgsTypeOutput) Append() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TeeArgsType) *bool { return v.Append }).(pulumi.BoolPtrOutput)
}

func (o TeeArgsTypeOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v TeeArgsType) string { return v.Content }).(pulumi.StringOutput)
}

func (o TeeArgsTypeOutput) Files() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TeeArgsType) []string { return v.Files }).(pulumi.StringArrayOutput)
}

type WgetArgsType struct {
	AppendOutput       *string  `pulumi:"appendOutput"`
	Background         *bool    `pulumi:"background"`
	Base               *string  `pulumi:"base"`
	CaCertificateFile  *string  `pulumi:"caCertificateFile"`
	CaDirectory        *string  `pulumi:"caDirectory"`
	Certificate        *string  `pulumi:"certificate"`
	CertificateType    *string  `pulumi:"certificateType"`
	Config             *string  `pulumi:"config"`
	Continue           *bool    `pulumi:"continue"`
	CrlFile            *string  `pulumi:"crlFile"`
	CutDirs            *int     `pulumi:"cutDirs"`
	Debug              *bool    `pulumi:"debug"`
	DirectoryPrefix    *string  `pulumi:"directoryPrefix"`
	Execute            []string `pulumi:"execute"`
	ForceDirectories   *bool    `pulumi:"forceDirectories"`
	ForceHtml          *bool    `pulumi:"forceHtml"`
	Help               *bool    `pulumi:"help"`
	HttpsOnly          *bool    `pulumi:"httpsOnly"`
	Inet4Only          *bool    `pulumi:"inet4Only"`
	InputFile          *string  `pulumi:"inputFile"`
	KeepSessionCookies *bool    `pulumi:"keepSessionCookies"`
	NoClobber          *bool    `pulumi:"noClobber"`
	NoDirectories      *bool    `pulumi:"noDirectories"`
	NoDnsCache         *bool    `pulumi:"noDnsCache"`
	NoVerbose          *bool    `pulumi:"noVerbose"`
	OutputDocument     *string  `pulumi:"outputDocument"`
	OutputFile         *string  `pulumi:"outputFile"`
	Password           *string  `pulumi:"password"`
	PrivateKey         *string  `pulumi:"privateKey"`
	PrivateKeyType     *string  `pulumi:"privateKeyType"`
	Progress           *string  `pulumi:"progress"`
	Quiet              *bool    `pulumi:"quiet"`
	RandomWait         *bool    `pulumi:"randomWait"`
	ReportSpeed        *string  `pulumi:"reportSpeed"`
	SaveCookies        *string  `pulumi:"saveCookies"`
	ShowProgress       *bool    `pulumi:"showProgress"`
	StartPos           *string  `pulumi:"startPos"`
	Timeout            *string  `pulumi:"timeout"`
	Timestamping       *bool    `pulumi:"timestamping"`
	Tries              *int     `pulumi:"tries"`
	Urls               []string `pulumi:"urls"`
	User               *string  `pulumi:"user"`
	UserAgent          *string  `pulumi:"userAgent"`
	Verbose            *bool    `pulumi:"verbose"`
	Version            *string  `pulumi:"version"`
	Wait               *string  `pulumi:"wait"`
}

type WgetArgsTypeOutput struct{ *pulumi.OutputState }

func (WgetArgsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WgetArgsType)(nil)).Elem()
}

func (o WgetArgsTypeOutput) ToWgetArgsTypeOutput() WgetArgsTypeOutput {
	return o
}

func (o WgetArgsTypeOutput) ToWgetArgsTypeOutputWithContext(ctx context.Context) WgetArgsTypeOutput {
	return o
}

func (o WgetArgsTypeOutput) ToOutput(ctx context.Context) pulumix.Output[WgetArgsType] {
	return pulumix.Output[WgetArgsType]{
		OutputState: o.OutputState,
	}
}

func (o WgetArgsTypeOutput) AppendOutput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.AppendOutput }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Background() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Background }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) Base() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Base }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) CaCertificateFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.CaCertificateFile }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) CaDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.CaDirectory }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.CertificateType }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Config }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Continue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Continue }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) CrlFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.CrlFile }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) CutDirs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *int { return v.CutDirs }).(pulumi.IntPtrOutput)
}

func (o WgetArgsTypeOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) DirectoryPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.DirectoryPrefix }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Execute() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WgetArgsType) []string { return v.Execute }).(pulumi.StringArrayOutput)
}

func (o WgetArgsTypeOutput) ForceDirectories() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.ForceDirectories }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) ForceHtml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.ForceHtml }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) Help() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Help }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) Inet4Only() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Inet4Only }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) InputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.InputFile }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) KeepSessionCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.KeepSessionCookies }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) NoClobber() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.NoClobber }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) NoDirectories() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.NoDirectories }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) NoDnsCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.NoDnsCache }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) NoVerbose() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.NoVerbose }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) OutputDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.OutputDocument }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) PrivateKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.PrivateKeyType }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Progress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Progress }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Quiet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Quiet }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) RandomWait() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.RandomWait }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) ReportSpeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.ReportSpeed }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) SaveCookies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.SaveCookies }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) ShowProgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.ShowProgress }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) StartPos() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.StartPos }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Timestamping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Timestamping }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) Tries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *int { return v.Tries }).(pulumi.IntPtrOutput)
}

func (o WgetArgsTypeOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WgetArgsType) []string { return v.Urls }).(pulumi.StringArrayOutput)
}

func (o WgetArgsTypeOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.User }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.UserAgent }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Verbose() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *bool { return v.Verbose }).(pulumi.BoolPtrOutput)
}

func (o WgetArgsTypeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func (o WgetArgsTypeOutput) Wait() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WgetArgsType) *string { return v.Wait }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(MvArgsTypeOutput{})
	pulumi.RegisterOutputType(RmArgsTypeOutput{})
	pulumi.RegisterOutputType(TarArgsTypeOutput{})
	pulumi.RegisterOutputType(TeeArgsTypeOutput{})
	pulumi.RegisterOutputType(WgetArgsTypeOutput{})
}
