// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.Baremetal.Coreutils.Inputs
{

    public sealed class TarArgsArgs : global::Pulumi.ResourceArgs
    {
        [Input("anchored")]
        public Input<bool>? Anchored { get; set; }

        [Input("append")]
        public Input<bool>? Append { get; set; }

        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("bzip2")]
        public Input<bool>? Bzip2 { get; set; }

        [Input("create")]
        public Input<bool>? Create { get; set; }

        [Input("delete")]
        public Input<bool>? Delete { get; set; }

        [Input("diff")]
        public Input<bool>? Diff { get; set; }

        [Input("directory")]
        public Input<string>? Directory { get; set; }

        [Input("exclude")]
        public Input<string>? Exclude { get; set; }

        [Input("excludeFrom")]
        public Input<string>? ExcludeFrom { get; set; }

        [Input("excludeVcs")]
        public Input<bool>? ExcludeVcs { get; set; }

        [Input("excludeVcsIgnores")]
        public Input<bool>? ExcludeVcsIgnores { get; set; }

        [Input("extract")]
        public Input<bool>? Extract { get; set; }

        [Input("file")]
        public Input<string>? File { get; set; }

        [Input("gzip")]
        public Input<bool>? Gzip { get; set; }

        [Input("ignoreCommandError")]
        public Input<bool>? IgnoreCommandError { get; set; }

        [Input("keepDirectorySymlink")]
        public Input<bool>? KeepDirectorySymlink { get; set; }

        [Input("keepNewerFiles")]
        public Input<bool>? KeepNewerFiles { get; set; }

        [Input("keepOldfiles")]
        public Input<bool>? KeepOldfiles { get; set; }

        [Input("list")]
        public Input<bool>? List { get; set; }

        [Input("lzip")]
        public Input<bool>? Lzip { get; set; }

        [Input("lzma")]
        public Input<bool>? Lzma { get; set; }

        [Input("lzop")]
        public Input<bool>? Lzop { get; set; }

        [Input("noAnchored")]
        public Input<bool>? NoAnchored { get; set; }

        [Input("noOverwriteDir")]
        public Input<bool>? NoOverwriteDir { get; set; }

        [Input("noSeek")]
        public Input<bool>? NoSeek { get; set; }

        [Input("overwrite")]
        public Input<bool>? Overwrite { get; set; }

        [Input("overwriteDir")]
        public Input<bool>? OverwriteDir { get; set; }

        [Input("removeFiles")]
        public Input<bool>? RemoveFiles { get; set; }

        [Input("skipOldFiles")]
        public Input<bool>? SkipOldFiles { get; set; }

        [Input("sparse")]
        public Input<bool>? Sparse { get; set; }

        [Input("stripComponents")]
        public Input<int>? StripComponents { get; set; }

        [Input("suffix")]
        public Input<string>? Suffix { get; set; }

        [Input("toStdout")]
        public Input<bool>? ToStdout { get; set; }

        [Input("transform")]
        public Input<string>? Transform { get; set; }

        [Input("unlinkFirst")]
        public Input<bool>? UnlinkFirst { get; set; }

        [Input("update")]
        public Input<bool>? Update { get; set; }

        [Input("verbose")]
        public Input<bool>? Verbose { get; set; }

        [Input("verify")]
        public Input<bool>? Verify { get; set; }

        [Input("version")]
        public Input<bool>? Version { get; set; }

        [Input("xz")]
        public Input<bool>? Xz { get; set; }

        [Input("zstd")]
        public Input<bool>? Zstd { get; set; }

        public TarArgsArgs()
        {
        }
        public static new TarArgsArgs Empty => new TarArgsArgs();
    }
}
