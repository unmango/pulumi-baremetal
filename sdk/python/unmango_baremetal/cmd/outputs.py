# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'TeeArgs',
]

@pulumi.output_type
class TeeArgs(dict):
    def __init__(__self__, *,
                 content: str,
                 files: Sequence[str],
                 append: Optional[bool] = None):
        pulumi.set(__self__, "content", content)
        pulumi.set(__self__, "files", files)
        if append is not None:
            pulumi.set(__self__, "append", append)

    @property
    @pulumi.getter
    def content(self) -> str:
        return pulumi.get(self, "content")

    @property
    @pulumi.getter
    def files(self) -> Sequence[str]:
        return pulumi.get(self, "files")

    @property
    @pulumi.getter
    def append(self) -> Optional[bool]:
        return pulumi.get(self, "append")


