# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'ProvisionerConnection',
]

@pulumi.output_type
class ProvisionerConnection(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "caPem":
            suggest = "ca_pem"
        elif key == "certPem":
            suggest = "cert_pem"
        elif key == "keyPem":
            suggest = "key_pem"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ProvisionerConnection. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ProvisionerConnection.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ProvisionerConnection.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 address: str,
                 ca_pem: Optional[str] = None,
                 cert_pem: Optional[str] = None,
                 key_pem: Optional[str] = None,
                 port: Optional[str] = None):
        pulumi.set(__self__, "address", address)
        if ca_pem is not None:
            pulumi.set(__self__, "ca_pem", ca_pem)
        if cert_pem is not None:
            pulumi.set(__self__, "cert_pem", cert_pem)
        if key_pem is not None:
            pulumi.set(__self__, "key_pem", key_pem)
        if port is not None:
            pulumi.set(__self__, "port", port)

    @property
    @pulumi.getter
    def address(self) -> str:
        return pulumi.get(self, "address")

    @property
    @pulumi.getter(name="caPem")
    def ca_pem(self) -> Optional[str]:
        return pulumi.get(self, "ca_pem")

    @property
    @pulumi.getter(name="certPem")
    def cert_pem(self) -> Optional[str]:
        return pulumi.get(self, "cert_pem")

    @property
    @pulumi.getter(name="keyPem")
    def key_pem(self) -> Optional[str]:
        return pulumi.get(self, "key_pem")

    @property
    @pulumi.getter
    def port(self) -> Optional[str]:
        return pulumi.get(self, "port")


