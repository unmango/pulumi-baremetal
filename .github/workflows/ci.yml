name: CI

on:
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      goreleaser: ${{ steps.goreleaser.outputs.any_changed }}
      lint: ${{ steps.lint.outputs.any_changed }}
      buf: ${{ steps.buf.outputs.any_changed }}
      sdk: ${{ steps.sdk.outputs.any_changed || steps.provider.outputs.any_changed || github.actor == 'renovate[bot]' }}
      install-sh: ${{ steps.install-sh.outputs.any_changed }}
    steps:
      - name: Chekcout
        uses: actions/checkout@v4

      - name: Goreleaser triggers
        id: goreleaser
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/**
            .goreleaser.yml

      - name: Lint triggers
        id: lint
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/**
            provider/**/*.go
            sdk/**/*.go
            tests/**/*.go

      - name: Buf triggers
        id: buf
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/**
            proto/**/*.proto
            buf.gen.yaml
            buf.lock
            buf.yaml

      - name: SDK triggers
        id: sdk
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/**
            provider/pkg/provider/**
            sdk/**

      - name: Provider triggers
        id: provider
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/**
            gen/**/*.go
            provider/cmd/provider/**
            provider/pkg/**
            provider/*go*

      - name: Installer triggers
        id: install-sh
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/**
            provider/cmd/provisioner/install.sh

  goreleaser:
    if: needs.setup.outputs.goreleaser == 'true'
    name: GoReleaser Check
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Chekcout
        uses: actions/checkout@v4

      - uses: goreleaser/goreleaser-action@v6
        with:
          args: check
          version: '~> v2'

  lint:
    if: needs.setup.outputs.lint == 'true'
    name: Lint
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        module:
          - provider
          - sdk
          # This keeps timing out
          # - tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ${{ matrix.module }}/go.mod
          cache-dependency-path: ${{ matrix.module }}/go.sum

      - name: golangci-lint ${{ matrix.module }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59
          working-directory: ${{ matrix.module }}

  buf:
    if: needs.setup.outputs.buf == 'true'
    name: Buf
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: 1.35.1
          github_token: ${{ github.token }}

      - name: Get changed files
        id: diff
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.proto

      - name: Lint
        if: ${{ steps.diff.outputs.any_changed == 'true' }}
        uses: bufbuild/buf-lint-action@v1
        with:
          input: ${{ steps.diff.outputs.all_changed_files }}

      - name: Buf breaking
        if: false # Lots of breaking changes in v1alpha1
        uses: bufbuild/buf-breaking-action@v1
        with:
          input: ${{ steps.diff.outputs.all_changed_files }}
          against: "https://github.com/${GITHUB_REPOSITORY}.git#branch=main,ref=HEAD~1"

  provisioner:
    name: Provisioner
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: provider/go.mod
          cache-dependency-path: provider/go.sum

      # Still not sure why this is trying to do buf things
      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: 1.35.1
          github_token: ${{ github.token }}

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.12.0
        with:
          repo: pulumi/pulumictl

      - name: Make
        run: make provisioner

      - name: Check worktree clean
        uses: pulumi/git-status-check-action@v1
        with:
          allowed-changes: |
            sdk/**/pulumi-plugin.json
            sdk/dotnet/Pulumi.*.csproj
            sdk/go/**/pulumiUtilities.go
            sdk/nodejs/package.json
            sdk/python/pyproject.toml
          continue-with-unexpected-changes: true

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: provisioner
          path: bin/provisioner

  docker:
    name: Docker
    uses: ./.github/workflows/docker.yml

  provider:
    name: Provider
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: provider/go.mod
          cache-dependency-path: provider/go.sum

      # Idk why this is trying to do buf things
      - name: Setup buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: 1.35.1
          github_token: ${{ github.token }}

      - name: Install Pulumi
        uses: pulumi/actions@v5
        with:
          pulumi-version-file: .versions/pulumi

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.12.0
        with:
          repo: pulumi/pulumictl

      - name: Make
        run: make provider

      - name: Check worktree clean
        uses: pulumi/git-status-check-action@v1
        with:
          allowed-changes: |
            sdk/**/pulumi-plugin.json
            sdk/dotnet/Pulumi.*.csproj
            sdk/go/**/pulumiUtilities.go
            sdk/nodejs/package.json
            sdk/python/pyproject.toml
          continue-with-unexpected-changes: true

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          path: bin/pulumi-resource-baremetal
          name: provider

  sdk:
    if: needs.setup.outputs.sdk == 'true'
    name: SDKs
    needs: [setup, provider]
    uses: ./.github/workflows/sdk.yml
    with:
      release: false

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      PROVISIONER_IMAGE: baremetal-provisioner:test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: tests/go.mod
          cache-dependency-path: |
            provider/go.sum
            tests/go.sum

      - name: Lib Tests
        working-directory: provider
        run: |
          go run github.com/onsi/ginkgo/v2/ginkgo run -r -v --silence-skips --github-output

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v6
        with:
          file: provider/cmd/provisioner/Dockerfile
          tags: ${{ env.PROVISIONER_IMAGE }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Lifecycle Tests
        working-directory: tests/lifecycle
        run: |
          go run github.com/onsi/ginkgo/v2/ginkgo run -v --silence-skips --github-output

  install-sh:
    if: needs.setup.outputs.install-sh == 'true'
    name: Installer
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make install script
        run: make out/install.sh

      - name: Test
        run: make .test/install_script
